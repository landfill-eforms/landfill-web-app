buildscript {
	ext {
		springBootVersion = '1.4.7.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:' + springBootVersion)
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'


// bootRun will use the production profile by default.
bootRun {
    args = ["--spring.profiles.active=prod"]
}

jar {
	baseName = 'lef-server'
	version = '0.6.2'
}

// Uncomment the following lines to build project as WAR instead of JAR.
/*
apply plugin: 'war'
war {
	baseName = 'lef-server'
	version = '0.6.2'
}
*/

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
}

ext {
	springVersion = '4.3.10.RELEASE'
	springSecurityVersion = '4.1.4.RELEASE'
	springBootVersion = '1.4.7.RELEASE'
	hibernateVersion = '5.0.1.Final'
	jacksonVersion = '2.8.9'
	jjwtVersion = '0.7.0'
	aspectjVersion = '1.8.9'
	javaxMailVersion = '1.5.6'
	commonsIoVersion = '2.5'
	poiVersion = '3.17-beta1'
	pdfboxVersion = '2.0.5'
	boxableVersion = '1.5-RC'
}

dependencies {

	// Spring Boot
	compile('org.springframework.boot:spring-boot:' + springBootVersion)
	compile('org.springframework.boot:spring-boot-autoconfigure:' + springBootVersion)
	compile('org.springframework.boot:spring-boot-starter:' + springBootVersion)
	compile('org.springframework.boot:spring-boot-starter-logging:' + springBootVersion)
	compile('org.springframework.boot:spring-boot-starter-tomcat:' + springBootVersion)
	compile('org.springframework.boot:spring-boot-starter-web:' + springBootVersion)
	
	// Spring Components
	compile('org.springframework:spring-core:' + springVersion)
	compile('org.springframework:spring-aop:' + springVersion)
	compile('org.springframework:spring-beans:' + springVersion)
	compile('org.springframework:spring-context:' + springVersion)
	compile('org.springframework:spring-expression:' + springVersion)
	compile('org.springframework:spring-jdbc:' + springVersion) 
	compile('org.springframework:spring-orm:' + springVersion) 
	compile('org.springframework:spring-tx:' + springVersion)
	compile('org.springframework:spring-web:' + springVersion)
	compile('org.springframework:spring-webmvc:' + springVersion)
	
	// Spring Security
	compile('org.springframework.security:spring-security-core:' + springSecurityVersion)
	compile('org.springframework.security:spring-security-web:' + springSecurityVersion)
	compile('org.springframework.security:spring-security-config:' + springSecurityVersion)
	
	
	// Hibernate
	compile('org.hibernate:hibernate-core:' + hibernateVersion)
	compile('org.hibernate:hibernate-entitymanager:' + hibernateVersion)
	compile('org.hibernate:hibernate-hikaricp:' + hibernateVersion)
	compile('org.hibernate:hibernate-validator:' + hibernateVersion)
	
	// Jackson
	compile('com.fasterxml.jackson.core:jackson-annotations:' + jacksonVersion)
	compile('com.fasterxml.jackson.core:jackson-core:' + jacksonVersion)
	compile('com.fasterxml.jackson.core:jackson-databind:' + jacksonVersion)
	compile('com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:' + jacksonVersion)
	
	// Other	
	compile('io.jsonwebtoken:jjwt:' + jjwtVersion)
	compile('org.aspectj:aspectjweaver:' + aspectjVersion)
	compile('commons-io:commons-io:' + commonsIoVersion)
	compile('com.sun.mail:javax.mail:' + javaxMailVersion)
	compile('org.apache.poi:poi:' + poiVersion)
	compile('org.apache.poi:poi-ooxml:' + poiVersion)
	compile('org.apache.pdfbox:pdfbox:' + pdfboxVersion)
	compile('com.github.dhorions:boxable:' + boxableVersion)
	
	compile files('lib/sqljdbc42.jar')
	
	// Uncomment the following line to build project for Tomcat (?).
	// providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}

